import org.gradle.plugins.ide.idea.model.IdeaModel
import org.gradle.plugins.ide.idea.model.IdeaProject

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: version_kotlin
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileKotlin {
        kotlinOptions {
            jvmTarget = 1.8
            languageVersion = 1.1
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = 1.8
            languageVersion = 1.1
        }
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {

    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
        options.compilerArgs << '-Xlint:unchecked'
    }

    IdeaModel idea = project.idea
    IdeaProject ideaProject = idea.getProject()

    if (ideaProject != null) {
        ideaProject.setJdkName(project.targetCompatibility.getName())
        ideaProject.setLanguageLevel(project.sourceCompatibility.getName())
        if (ideaProject.hasProperty("vcs")) {
            ideaProject.setVcs('Git')
        }
    }

    idea.module {
        downloadJavadoc = true
        downloadSources = true
    }

    task jars() {
        dependsOn build
    }

    task subRelease() {
        dependsOn jars, uploadArchives
    }

    modifyPom {
        //noinspection GroovyAssignabilityCheck
        project {
            name 'Cuarentena'
            description 'Painless class validation for secure execution of code and scripts down to the method/property level.'
            url 'https://github.com/kohesive/cuarentena'
            inceptionYear '2017'

            scm {
                url 'https://github.com/kohesive/cuarentena'
                connection 'scm:https://github.com/kohesive/cuarentena'
                developerConnection 'scm:git@github.com:kohesive/cuarentena.git'
            }

            licenses {
                license {
                    name 'MIT'
                    url 'https://github.com/kohesive/cuarentena/blob/master/LICENSE'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'apatrida'
                    name 'Jayson Minard'
                    email 'jayson.minard@gmail.com'
                }
            }
        }

    }

    nexus {
        sign = true
    }

    bintray {
        user = "$bintrayUser"
        key = "$bintrayKey"
        pkg {
            repo = 'kohesive'
            name = project.name
            licenses = ['MIT']
            vcsUrl = 'scm:git:git@github.com:kohesive/cuarentena.git'

            version {
                name = project.version
                desc = 'n/a'
                released = new Date()
            }
            publicDownloadNumbers = false
            configurations = ['archives']
        }
        publish = true
        dryRun = false
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = "$version_gradle"
}

task jars() {
    dependsOn subprojects.jars
}

task release() {
    dependsOn subprojects.subRelease
}


defaultTasks 'clean', 'jars'
